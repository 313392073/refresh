1 vue组件的data 必须是一个函数？
    对象是引用类型  当复用组件时  由于数据对象都指向同一个data对象 当在一个组件中修改data时
    其他重用的组件中的data会同时被修改 而使用返回对象的函数  由于每次返回的都是一个新对象 引用地址不同 则不会出现这个问题

2 computed和watch的区别 
    计算属性computed ：
        1 支持缓存 只有依赖数据发生改变 才会重新进行计算
        2 不支持异步 当computed内有异步操作时无效  无法监听数据的变化
        3 computed属性值会默认走缓存  计算属性是基于他们的响应式依赖进行缓存的
            也就是基于data中申明过或者父组件传递的props中的数据通过己算得到的值
        4 如果一个属性是由其他属性计算而来的 这个属性依赖其他属性 是一个多对一或者一对一 一般是用computed
        5 如果computed属性属性值是函数  那么默认会走get方法 函数的返回值就是属性的属性值
            在computed中  属性都有一个get和一个set方法  当数据变化时 调用set方法
3 侦听属性watch:
    1 不支持缓存  数据变  直接会触发相应的操作
    2 watch支持异步
    3 监听的函数接收两个参数  第一个参数是最新的值 第二个参数是输入之前的值
    4 当一个属性发生变化时 需要执行对应的操作  一对多
    5 监听数据必须是data中声明过或者父组件传递过来的props中的数据 当数据变化时 触发其它操作 函数有两个参数

4 $nextTick是什么？
    vue实现响应式并不是数据发生变化后dom立即变化  而是按照一定的策略来进行dom更新
    nextTick 是在下次dom更新循环结束之后执行延持回调 在修改数据之后使用nextTick 则可以在回调中获取更新后的dom

5 prop验证 和默认值
    我们在父组件给子组件传值的时候  可以指定该props的默认值及类型  当传递数据类型不正确的时候 vue会发出警告
    props:{
        visible:{
            default:true,
            type:Boolean,
            required:true
        }
    }

封装vue组件的过程
    组件可以提高整个项目的开发效率  能够把页面抽象成多个相对独立的模块  解决了我们传统项目开发：
    效率低  难维护  复用性等问题
    然后再Vue.extend方法中 创建一个组件  然后使用Vue.component方法注册组件 子组件需要数据 可以在
    props中接受定义 而子组件修改好数据后  想把数据传递给父组件 可以采用emit方法

vue如何监听对象或者数组某个属性的变化
    在项目中直接设置数组的某一项值  或者直接设置对象的某个属性值  这个时候 你会发现页面并没有更新
    这是因为Object.defineProperty()限制  监听不到变化

解决方式：
    this.$set(你要改变的数组/对象，你要改变的位置/key,你要改成什么value)
this.$set(this.arr, 0, "OBKoro1"); // 改变数组
this.$set(this.obj, "c", "OBKoro1"); // 改变对象

v-for  key的作用
    当Vue用v-for 正在更新已渲染过的元素列表时， 它默认用"就地复用"策略 如果数据项的顺序被改变
    Vue将不是移动dom元素来匹配数据项的改变 而是简单复用此处每个元素  并且确保它在特定索引下显示已被渲染过的每个元素

assets和static的区别：
    都是用来存放项目中所使用的静态资源文件
    区别：
    assets的文件在运行npm run build 的时候会打包。简单来说就是会被压缩体积 代码格式化之类的 打包之后也会放到static中
    static 中的文件则不会被打包
slot 插槽
    很多时候  我们封装了一个组件之后 在父组件使用的时候  想添加一些dom元素  这个时候 可以使用slot插槽了
    但是这些dom是否显示及在哪里显示  则是看子组件中slot组件的位置了
vuex-persist vuex持久化存储
    问题？ vuex解决了多视图之间的数据共享问题  但是vuex的状态存储并不能持久化  也就是说当你存储在vuex中的store里的数据  只要一刷新页面  数据就丢失了
    引入vuex-persist 插件  他是未为vuex持久化存储而生的一个插件 不需要你手动存取storage 而是直接将状态保存至cookie或者localStorage中

vue里面router-link 在电脑上有用  在安卓上没反应怎么解决？
    Vue路由在Android机上有问题  babel问题   安装babel polypill插件解决
vue2中注册router-link上事件无效解决办法
    使用@click.native 原因：router-link 会阻止click事件  .native直接监听一个原生事件